<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{CCF9FDBE-C0D5-4697-B93C-976B690D75E9}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Quantler.Backtester</RootNamespace>
    <AssemblyName>Quantler.Backtester</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <NuGetPackageImportStamp>3b3e47c8</NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x64\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\x64\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Accord">
      <HintPath>..\libs\Accord.dll</HintPath>
    </Reference>
    <Reference Include="Accord.Genetic">
      <HintPath>..\libs\Accord.Genetic.dll</HintPath>
    </Reference>
    <Reference Include="Accord.Math">
      <HintPath>..\libs\Accord.Math.dll</HintPath>
    </Reference>
    <Reference Include="Accord.Neuro">
      <HintPath>..\libs\Accord.Neuro.dll</HintPath>
    </Reference>
    <Reference Include="Accord.Statistics">
      <HintPath>..\libs\Accord.Statistics.dll</HintPath>
    </Reference>
    <Reference Include="AForge">
      <HintPath>..\libs\AForge.dll</HintPath>
    </Reference>
    <Reference Include="AForge.Fuzzy">
      <HintPath>..\libs\AForge.Fuzzy.dll</HintPath>
    </Reference>
    <Reference Include="AForge.Genetic">
      <HintPath>..\libs\AForge.Genetic.dll</HintPath>
    </Reference>
    <Reference Include="AForge.MachineLearning">
      <HintPath>..\libs\AForge.MachineLearning.dll</HintPath>
    </Reference>
    <Reference Include="AForge.Math">
      <HintPath>..\libs\AForge.Math.dll</HintPath>
    </Reference>
    <Reference Include="AForge.Neuro">
      <HintPath>..\libs\AForge.Neuro.dll</HintPath>
    </Reference>
    <Reference Include="alglibnet2">
      <HintPath>..\libs\alglibnet2.dll</HintPath>
    </Reference>
    <Reference Include="Ionic.Zip, Version=1.9.8.0, Culture=neutral, PublicKeyToken=6583c7c814667745, processorArchitecture=MSIL">
      <HintPath>..\packages\DotNetZip.1.9.8\lib\net20\Ionic.Zip.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="MathNet.Numerics, Version=3.12.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\MathNet.Numerics.3.12.0\lib\net40\MathNet.Numerics.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="NLog, Version=4.0.0.0, Culture=neutral, PublicKeyToken=5120e14c03d0593c, processorArchitecture=MSIL">
      <HintPath>..\packages\NLog.4.2.3\lib\net45\NLog.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="TA-Lib-Core, Version=1.0.2813.38892, Culture=neutral, PublicKeyToken=fdb2a6b268f56aa5, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\libs\TA-Lib-Core.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="SimpleBacktester.cs" />
    <Compile Include="TestStrategy\Entry\EMACrossExample.cs" />
    <Compile Include="TestStrategy\ExampleTradingAgent.cs" />
    <Compile Include="TestStrategy\Entry\PriceActionExample.cs" />
    <Compile Include="TestStrategy\Exit\ATRExit.cs" />
    <Compile Include="TestStrategy\Exit\FixedTakeProfit.cs" />
    <Compile Include="TestStrategy\Exit\TimedExit.cs" />
    <Compile Include="TestStrategy\Exit\VariableTimedExit.cs" />
    <Compile Include="TestStrategy\MoneyManagement\FixedAmountEquity.cs" />
    <Compile Include="TestStrategy\MoneyManagement\FixedFractional.cs" />
    <Compile Include="TestStrategy\MoneyManagement\FixedPositionSizing.cs" />
    <Compile Include="TestStrategy\MoneyManagement\VolatilityBased.cs" />
    <Compile Include="TestStrategy\RiskManagement\FixedStop.cs" />
    <Compile Include="TestStrategy\RiskManagement\StdevStop.cs" />
    <Compile Include="TestStrategy\BrokerModels\FXCMBrokerModel.cs" />
    <Compile Include="TestStrategy\BrokerModels\GenericBrokerModel.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
    <None Include="Data\EURUSD.zip">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="Data\USDJPY.zip">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Quantler.Agent\Quantler.Agent.csproj">
      <Project>{92077d53-fdb8-4aa7-b199-8e3799135842}</Project>
      <Name>Quantler.Agent</Name>
    </ProjectReference>
    <ProjectReference Include="..\Quantler.Interfaces\Quantler.Interfaces.csproj">
      <Project>{a3893de4-a831-4ff2-97a9-c306f6bfd1f1}</Project>
      <Name>Quantler.Interfaces</Name>
    </ProjectReference>
    <ProjectReference Include="..\Quantler.Templates\Quantler.Templates.csproj">
      <Project>{d71f0a11-0ace-46e7-b625-0dd15ff82d6f}</Project>
      <Name>Quantler.Templates</Name>
    </ProjectReference>
    <ProjectReference Include="..\Quantler\Quantler.csproj">
      <Project>{896a5737-5764-4251-9963-32ec4853a042}</Project>
      <Name>Quantler</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="TestStrategy\Indicator\" />
    <Folder Include="TestStrategy\Statistics\" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>